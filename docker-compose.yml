services:
  api_service:
    build:
      context: .
      dockerfile: backend/Dockerfile
    restart: unless-stopped
    ports:
      - "8080:8080"
    networks:
      - springapimysql-net
      - elk-net
    environment:
      SPRING_PROFILES_ACTIVE: mysql,logstash
      SPRING_DATASOURCE_URL: jdbc:mysql://mysqldb:3306/cda-bdd?allowPublicKeyRetrieval=true&useSSL=false&useUnicode=true&characterEncoding=UTF-8
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: admin
      JAVA_OPTS: -Xmx512m -Xms256m
    volumes:
      - ./logs:/app/logs
    depends_on:
      mysqldb:
        condition: service_healthy
      logstash:
        condition: service_healthy

  mysqldb:
    image: mysql:8.0
    restart: unless-stopped
    ports:
      - "3307:3306"
    networks:
      - springapimysql-net
    environment:
      MYSQL_DATABASE: cda-bdd
      MYSQL_ROOT_PASSWORD: admin
      MYSQL_TCP_PORT: 3306
      TZ: America/Bogota
    volumes:
      - mysql_data:/var/lib/mysql
    healthcheck:
      test: [ "CMD-SHELL", "mysqladmin ping -uroot -p$$MYSQL_ROOT_PASSWORD" ]
      interval: 5s
      timeout: 20s
      retries: 10
      start_period: 30s

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.12.0
    restart: unless-stopped
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
      - bootstrap.memory_lock=false
      - TZ=America/Bogota
    networks:
      - elk-net
    ports:
      - "9200:9200"
    volumes:
      - es_data:/usr/share/elasticsearch/data
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://localhost:9200/_cluster/health || exit 1" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  logstash:
    image: docker.elastic.co/logstash/logstash:8.12.0
    restart: unless-stopped
    volumes:
      - ./logstash.conf:/usr/share/logstash/pipeline/logstash.conf
      - ./logstash.yml:/usr/share/logstash/config/logstash.yml
    networks:
      - elk-net
    ports:
      - "5000:5000"
      - "9600:9600"
    environment:
      - LS_JAVA_OPTS=-Xmx1g -Xms512m
      - TZ=America/Bogota
    depends_on:
      elasticsearch:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9600/" ]
      interval: 30s
      timeout: 10s
      retries: 3

  kibana:
    image: docker.elastic.co/kibana/kibana:8.12.0
    restart: unless-stopped
    networks:
      - elk-net
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - TZ=America/Bogota
    depends_on:
      elasticsearch:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:5601/api/status" ]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  mysql_data:
  es_data:

networks:
  springapimysql-net:
  elk-net:
    driver: bridge
